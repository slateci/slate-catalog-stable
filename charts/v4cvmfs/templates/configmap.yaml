apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "v4cvmfs.fullname" . }}
data:
  default.vcl: |-
    vcl 4.1;
    import std;
    import dynamic;
    import directors;

    {{- range $nindex, $be := .Values.backends }}
    backend {{ $be.name }} {
        .host = "{{ $be.host }}";
        .port = "{{ $be.port }}";
    }
    {{- end }}

    acl local {
        {{.Values.acl | nindent 4 }}
    }

    sub vcl_recv {
        if (!(client.ip ~ local)) {
            return (synth(405));
        }        
        if (req.method != "GET" && req.method != "HEAD") {
            return (pipe);
        }

        {{- range $nindex, $be := .Values.backends }}
        if (req.restarts == {{ $nindex }}) {
            set req.backend_hint = {{ $be.name }};
        }
        {{- end }}
    }

    sub vcl_backend_fetch {
        # this is needed for BNL CERN and some other backends
        unset bereq.http.host;
    }

    sub vcl_backend_response {
        if ( beresp.status == 404 ) {
            {{ $lb := last .Values.backends }}
            if (bereq.backend != {{ get $lb "name" }} ){
                # unless this is a last of backends don't cache it so 
                # other backends can be tried
                set beresp.uncacheable = true;
                return (deliver);
            } else {
                std.log(">> caching 404 <<");
                set beresp.ttl = 180s;
            }
        }
    }

    sub vcl_deliver {
        if (resp.status == 404) {
            if (obj.uncacheable){
                # not all the backends were tried yet
                std.log(">> force restart <<<");
                return(restart);
            }
        }
    }



